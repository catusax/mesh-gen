// Code generated by protoc-gen-go-kit-grpc.

package test

import (
	context "context"
	log "log"
	testing "testing"
)

func TestWallet_Insert(t *testing.T) {
	client := GetNewWalletClient()
	rsp, err := client.Insert(context.TODO(), &InsertRequest{
		Item: &Item{
			UserId: new(string),
			Id:     "string",
			Val:    new(TestEnum),
			Val2:   TestEnum_UNIVERSAL,
		},
	})
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
func TestWallet_Delete(t *testing.T) {
	client := GetNewWalletClient()
	rsp, err := client.Delete(context.TODO(), &DeleteRequest{
		Id:     []string{},
		Corpus: DeleteRequest_UNIVERSAL,
	})
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
func TestWallet_ClientStream(t *testing.T) {
	client := GetNewWalletClient()
	rsp, err := client.ClientStream(context.TODO())
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
func TestWallet_ServerStream(t *testing.T) {
	client := GetNewWalletClient()
	rsp, err := client.ServerStream(context.TODO(), &ServerStreamRequest{
		Count: 0,
	})
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
func TestWallet_BidiStream(t *testing.T) {
	client := GetNewWalletClient()
	rsp, err := client.BidiStream(context.TODO())
	if err != nil {
		t.Error(err)
		return
	}
	log.Printf("rsp: %v", rsp)
}
